[project]
name = "pipescaler"
version = "0.1.0"
description = ""
authors = [
    { name = "Karl Debiec", email = "karl.t.debiec@gmail.com" }
]
license = "BSD-3-Clause"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "ImageHash>=4.3.1",
    "numba>=0.60.0",
    "numpy>=1.26.4",
    "opencv-python>=4.10.0.84",
    "pandas>=2.2.3",
    "Pillow>=11.0.0",
    "reportlab>=4.0.0",
    "rlpycairo>=0.3.0",
    "scikit-image>=0.24.0",
    "scipy>=1.14.1",
    "svglib>=1.5.1",
    "torch>=2.5.1",
    "xbrz.py @ git+https://github.com/ioistired/xbrz.py",
]

[project.scripts]
pipescaler = "pipescaler.cli.pipescaler_cli:PipeScalerCli.main"

[dependency-groups]
dev = [
    "pandas-stubs>=2.2.3.241009",
    "pyright>=1.1.396",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.9.10",
    "types-Pillow>=10.2.0.20240822",
]

[tool.black]
line-length=88
target-version=['py313']

[tool.coverage.run]
data_file='coverage.coverage'
concurrency='multiprocessing'
parallel='True'

[tool.isort]
profile='black'

[tool.pytest.ini_options]
log_cli=true
log_cli_level="WARNING"
markers=[
    'serial: test must be run serially',
    'gui: test covers GUI application']

[tool.ruff.lint]
select = [
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "NPY", # numpy-specific rules
    "PERF", # perflint
    "PL", # pylint
    "UP", # pyupgrade
    "W", # pycodestyle
]
ignore = [
    "D410", # Missing blank line after section
    "D411", # Missing blank line before section
    "N818", # Suffix "Error" should be used on exception names
    "PLR2004" # Magic value used in comparison
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.setuptools]
packages = { find = { include = ["pipescaler*"] } }

[project.entry-points."pipescaler.image.processors"]
crop = "pipescaler.image.cli.processors.crop_cli:CropCli"
esrgan = "pipescaler.image.cli.processors.esrgan_cli:EsrganCli"
expand = "pipescaler.image.cli.processors.expand_cli:ExpandCli"
heighttonormal = "pipescaler.image.cli.processors.height_to_normal_cli:HeightToNormalCli"
mode = "pipescaler.image.cli.processors.mode_cli:ModeCli"
resize = "pipescaler.image.cli.processors.resize_cli:ResizeCli"
sharpen = "pipescaler.image.cli.processors.sharpen_cli:SharpenCli"
solidcolor = "pipescaler.image.cli.processors.solid_color_cli:SolidColorCli"
threshold = "pipescaler.image.cli.processors.threshold_cli:ThresholdCli"
waifu = "pipescaler.image.cli.processors.waifu_cli:WaifuCli"
xbrz = "pipescaler.image.cli.processors.xbrz_cli:XbrzCli"

[project.entry-points."pipescaler.image.mergers"]
alphamerger = "pipescaler.image.cli.mergers.alpha_merger_cli:AlphaMergerCli"
palettematch = "pipescaler.image.cli.mergers.palette_match_merger_cli:PaletteMatchMergerCli"

[project.entry-points."pipescaler.image.splitters"]
alphasplitter = "pipescaler.image.cli.splitters.alpha_splitter_cli:AlphaSplitterCli"

[project.entry-points."pipescaler.image.utilities"]
esrganserializer = "pipescaler.image.cli.utilities.esrgan_serializer_cli:EsrganSerializerCli"
waifuserializer = "pipescaler.image.cli.utilities.waifu_serializer_cli:WaifuSerializerCli"


[tool.uv]
package = true
