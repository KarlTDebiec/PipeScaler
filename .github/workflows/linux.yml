name: Linux

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout PipeScaler
          uses: actions/checkout@v2
          with:
              submodules: true
        - name: Set up Python 3.8
          uses: actions/setup-python@v2
          with:
              python-version: "3.8"
        - name: Install Poetry
          uses: dschep/install-poetry-action@v1.2
        - name: Cache Poetry virtualenv
          uses: actions/cache@v1
          id: cache
          with:
              path: ~/.virtualenvs
              key: poetry-${{ hashFiles('**/poetry.lock') }}
              restore-keys: |
                  poetry-${{ hashFiles('**/poetry.lock') }}
        - name: Set Poetry config
          run: |
              poetry config settings.virtualenvs.in-project false
              poetry config settings.virtualenvs.path ~/.virtualenvs
        - name: Install Dependencies
          run: poetry install
          if: steps.cache.outputs.cache-hit != 'true'
        - name: prospector
          run: |
              cd ${GITHUB_WORKSPACE}
              poetry run prospector -0 pipescaler
        - name: pydocstyle
          run: |
              cd ${GITHUB_WORKSPACE}
              poetry run pydocstyle pipescaler || echo
        - name: Test with pytest
          run: |
              export PACKAGE_ROOT=${GITHUB_WORKSPACE}/pipescaler
              cd ${GITHUB_WORKSPACE}/test
              poetry run pytest -v --cov=pipescaler --cov-report term .
